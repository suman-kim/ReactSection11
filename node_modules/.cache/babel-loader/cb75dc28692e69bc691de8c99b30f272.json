{"ast":null,"code":"var _jsxFileName = \"D:\\\\node_folder\\\\ReactSection11\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaltCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  console.log(state);\n\n  if (action.type === 'ADD') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    console.log(existingCartItem);\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = { ...action.item\n      };\n      updatedItems = state.items.concat(action.item);\n      console.log(updatedItems);\n    }\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = { ...state.items\n      };\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaltCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaltCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"TzZgFBpGDAfeohj6Ah/j0so0bc8=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/node_folder/ReactSection11/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaltCartState","items","totalAmount","cartReducer","state","action","console","log","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","updatedTotalAmount","price","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaltCartState = {\r\n\titems:[],\r\n\ttotalAmount: 0 \r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n\tconsole.log(state);\r\n\tif(action.type === 'ADD'){\t\r\n\r\n\t\tconst existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n\r\n\t\tconst existingCartItem = state.items[existingCartItemIndex];\r\n\t\tconsole.log(existingCartItem);\r\n\t\tlet updatedItems;\r\n\r\n\t\tif(existingCartItem){\r\n\t\t\tconst updatedItem = {\r\n\t\t\t\t...existingCartItem,\r\n\t\t\t\tamount: existingCartItem.amount + action.item.amount\r\n\t\t\t};\r\n\t\t\tupdatedItems = [...state.items];\r\n\t\t\tupdatedItems[existingCartItemIndex] = updatedItem;\r\n\r\n\t\t} else {\r\n\t\t\tupdatedItems = {...action.item};\r\n\t\t\tupdatedItems = state.items.concat(action.item);\r\n\t\t\tconsole.log(updatedItems);\r\n\t\t}\r\n\t\tconst updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\t\treturn {\r\n\t\t\titems:updatedItems,\r\n\t\t\ttotalAmount:updatedTotalAmount\r\n\t\t};\r\n\t}\r\n\tif(action.type === 'REMOVE'){\r\n\t\tconst existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\r\n\r\n\t\tconst existingItem = state.items[existingCartItemIndex];\r\n\r\n\t\tconst updatedTotalAmount = state.totalAmount - existingItem.price;\r\n\t\tlet updatedItems;\r\n\t\tif(existingItem.amount === 1){\r\n\t\t\tupdatedItems = state.items.filter(item => item.id !== action.id);\r\n\t\t}else {\r\n\t\t\tconst updatedItem = {...existingItem, amount: existingItem.amount - 1};\r\n\t\t\tupdatedItems = {...state.items};\r\n\t\t\tupdatedItems[existingCartItemIndex] = updatedItem;\r\n\t\t}\r\n\t\treturn{\r\n\t\t\titems:updatedItems,\r\n\t\t\ttotalAmount:updatedTotalAmount\r\n\t\t}\r\n\r\n\t}\t\r\n\r\n\treturn defaltCartState\r\n}\r\n\r\nconst CartProvider = props => {\r\n\r\n\tconst [cartState , dispatchCartAction] = useReducer(cartReducer, defaltCartState);\r\n\r\n\tconst addItemToCartHandler = (item) => {\r\n\t\tdispatchCartAction({type: 'ADD', item: item});\r\n\t};\r\n\r\n\tconst removeItemFromCartHandler = (id) => {\r\n\t\tdispatchCartAction({type: 'REMOVE',id:id});\t\r\n\t};\r\n\r\n\tconst cartContext = {\r\n\t\titems: cartState.items,\r\n\t\ttotalAmount: cartState.totalAmount,\r\n\t\taddItem: addItemToCartHandler,\r\n\t\tremoveItem:removeItemFromCartHandler,\r\n\t}\r\n\r\n\treturn <CartContext.Provider value={cartContext}>\r\n\t\t{props.children}\r\n\t</CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}